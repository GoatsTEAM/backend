name: CI/CD Deploy

# Триггер — пуш в ветку main
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Setup SSH
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Запускаем ssh-agent и подключаем ключ
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

          # Добавляем сервер в known_hosts, чтобы избежать подтверждения
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # 3) Тест SSH-подключения
      - name: Test SSH connection
        run: |
          ssh -i ~/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              -o BatchMode=yes \
              ${{ secrets.DEPLOY_USER }}@${{ secrets.SERVER_IP }} \
              'echo SSH_OK'

      # 4) Деплой service1
      - name: Deploy service1
        run: |
          ssh -i ~/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              ${{ secrets.DEPLOY_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd /home/${{ secrets.DEPLOY_USER }}/projects/repo/service1
            git pull origin main
            docker-compose down
            docker-compose up -d --build
          EOF

      # 5) Деплой service2
      - name: Deploy service2
        run: |
          ssh -i ~/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              ${{ secrets.DEPLOY_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd /home/${{ secrets.DEPLOY_USER }}/projects/repo/service2
            git pull origin main
            docker build -t service2 .
            docker rm -f service2 || true
            docker run -d --name service2 -p 8001:8000 service2
          EOF