name: Deploy changed services

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1 - –∫–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–ø–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –Ω—É–∂–Ω–∞ –¥–ª—è diff)
      - uses: actions/checkout@v3
        with: { fetch-depth: 0 }

      # 2 - —Å–ø–∏—Å–æ–∫ –≤–µ—Ä—Ö–Ω–∏—Ö –ø–∞–ø–æ–∫, –≥–¥–µ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
      - id: detect
        name: Detect changed folders
        run: |
          diff_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "diff_files<<EOF" >>"$GITHUB_OUTPUT"
          echo "$diff_files"     >>"$GITHUB_OUTPUT"
          echo "EOF"             >>"$GITHUB_OUTPUT"

          folders=$(echo "$diff_files" \
            | cut -d/ -f1 | sort -u | tr '\n' ' ')
          echo "folders=$folders" >>"$GITHUB_OUTPUT"

      # 3 - —á–∏—Ç–∞–µ–º deploy.yaml –≤ —ç—Ç–∏—Ö –ø–∞–ø–∫–∞—Ö
      - id: cfg
        name: Read deploy.yaml configs
        run: |
          wget -qO ./yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x ./yq
          S=(); C=()
          for d in ${{ steps.detect.outputs.folders }}; do
            [ -f "$d/deploy.yaml" ] || continue
            S+=("$(./yq e '.service'  "$d/deploy.yaml")")
            C+=("$(./yq e '.compose' "$d/deploy.yaml")")
          done
          echo "services=${S[*]}" >>"$GITHUB_OUTPUT"
          echo "composes=${C[*]}" >>"$GITHUB_OUTPUT"

      # 4 - –æ—Ç–ª–∞–¥–∫–∞: —á—Ç–æ –Ω–∞—à–ª–∏
      - name: Debug
        run: |
          echo "Services:  ${{ steps.cfg.outputs.services }}"
          echo "Composes:  ${{ steps.cfg.outputs.composes }}"

      # 5 - SSH-–¥–µ–ø–ª–æ–π –±–µ–∑ here-doc
      - name: Deploy
        if: steps.cfg.outputs.services != ''
        env:
          SSH_KEY:   ${{ secrets.ssh_key }}
          SSH_HOST:  ${{ secrets.server_ip }}
          SSH_USER:  ${{ secrets.deploy_user }}
          SERVICES:  ${{ steps.cfg.outputs.services }}
          COMPOSES:  ${{ steps.cfg.outputs.composes }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

          IFS=' ' read -ra svcs <<<"$SERVICES"
          IFS=' ' read -ra cmps <<<"$COMPOSES"

          for i in "${!svcs[@]}"; do
            svc=${svcs[$i]}
            dir=${cmps[$i]}
            echo "üöÄ Deploying '$svc' (compose dir: $dir)"

            ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" "
              cd '$dir'
              if docker compose config --services | grep -qx '$svc'; then
                echo '‚Ä¢ building $svc'
                docker compose build '$svc'
                echo '‚Ä¢ restarting $svc'
                docker compose up -d '$svc'
              else
                echo '‚ö† $svc not found in compose ‚Äî skipped'
              fi
            "
          done