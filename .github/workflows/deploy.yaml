name: Deploy changed services
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    #------------------------------------------------------------------#
    # 1. –∫–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    #------------------------------------------------------------------#
    - uses: actions/checkout@v3
      with: { fetch-depth: 0 }

#------------------------------------------------------------------#
# 2. –∫–∞–∫–∏–µ –≤–µ—Ä—Ö–Ω–∏–µ –ø–∞–ø–∫–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å                                 #
#------------------------------------------------------------------#
    - id: folders
      name: Detect folders
      run: |
        diff_files=$(git diff --name-only \
                    ${{ github.event.before }} \
                    ${{ github.sha }})
        echo "diff_files<<EOF" >>"$GITHUB_OUTPUT"
        echo "$diff_files"     >>"$GITHUB_OUTPUT"
        echo "EOF"             >>"$GITHUB_OUTPUT"

        folders=$(echo "$diff_files" \
                | cut -d/ -f1 | sort -u | tr '\n' ' ')
        echo "list=$folders"   >>"$GITHUB_OUTPUT"

        #------------------------------------------------------------------#
        # 3. —á–∏—Ç–∞–µ–º deploy.yaml –≤ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö
        #------------------------------------------------------------------#
        - id: cfg
          name: Read deploy.yaml
          run: |
            pip install -q yq
            S=() C=()
            for d in ${{ steps.folders.outputs.list }}; do
              [ -f "$d/deploy.yaml" ] || continue
              S+=("$(yq e '.service'  "$d/deploy.yaml")")
              C+=("$(yq e '.compose'  "$d/deploy.yaml")")
            done
            echo "svc=${S[*]}" >>"$GITHUB_OUTPUT"
            echo "cmp=${C[*]}" >>"$GITHUB_OUTPUT"

    # ---------- DEBUG: –∫–∞–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ–π–¥—É—Ç –≤ –¥–µ–ø–ª–æ–π ----------
    - name: üîç Debug services to deploy
      run: |
        echo "Services:  ${{ steps.cfg.outputs.svc }}"
        echo "Composes:  ${{ steps.cfg.outputs.cmp }}"

    #------------------------------------------------------------------#
    # 4. –ø—Ä–æ–≤–µ—Ä–∫–∞ SSH –∏ –¥–µ–ø–ª–æ–π
    #------------------------------------------------------------------#
    - name: Deploy
      if: ${{ steps.cfg.outputs.svc != '' }}
      env:
        SVC:      ${{ steps.cfg.outputs.svc }}
        CMP:      ${{ steps.cfg.outputs.cmp }}
        SSH_KEY:  ${{ secrets.ssh_key }}
        SSH_HOST: ${{ secrets.server_ip }}
        SSH_USER: ${{ secrets.deploy_user }}
      run: |
        mkdir -p ~/.ssh
        printf '%s\n' "$SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

        read -ra services <<<"$SVC"
        read -ra composes <<<"$CMP"

        for i in "${!services[@]}"; do
          svc=${services[$i]}
          dir=${composes[$i]}
          echo "üöÄ  $svc   (compose dir: $dir)"

          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
              "$SSH_USER@$SSH_HOST" "
            cd '$dir' &&
            docker compose config --services | grep -qx '$svc' &&
            docker compose build '$svc' &&
            docker compose up -d '$svc' ||
            echo '‚ö†  $svc not found in compose ‚Äî skipped'
          "
        done